def build_prompt(text=None, audio_text="", image_desc="", weather=None, lang="ta"):
    text = text or ""
    audio_text = audio_text or ""
    image_desc = image_desc or ""
    weather = weather or {"temp": "NA", "humidity": "NA", "condition": "NA"}

    parts = []

    if text.strip():
        parts.append(f"ЁЯУЭ {text.strip()}")

    if audio_text.strip():
        parts.append(f"ЁЯОд {audio_text.strip()}")

    if image_desc.strip():
        parts.append(f"ЁЯЦ╝я╕П {image_desc.strip()}")

    input_summary = "\n".join(parts) or "[No input]"

    if lang == "hi":
        return f"""рдЖрдк рдПрдХ рдмреБрджреНрдзрд┐рдорд╛рди рдмрд╣реБрднрд╛рд╖реА рдХреГрд╖рд┐ рд╕рд╣рд╛рдпрдХ AI рд╣реИрдВред рдХрд┐рд╕рд╛рди рдХреА рдЬрд╛рдирдХрд╛рд░реА рдФрд░ рдореМрд╕рдо рдХреЗ рдЕрдиреБрд╕рд╛рд░ рд╣рд┐рдВрджреА рдореЗрдВ рд╕рд▓рд╛рд╣ рджреЗрдВред

{input_summary}

ЁЯМжя╕П рдореМрд╕рдо рдХреА рдЬрд╛рдирдХрд╛рд░реА:
- рддрд╛рдкрдорд╛рди: {weather['temp']}┬░C
- рд╕реНрдерд┐рддрд┐: {weather['condition']}
- рдирдореА: {weather['humidity']}%

тЬЕ рдХреГрдкрдпрд╛:
1. рд╣рд┐рдВрджреА рдореЗрдВ рд╕рд░рд▓ рдЙрддреНрддрд░ рджреЗрдВред
2. рд╡рд░реНрддрдорд╛рди рдореМрд╕рдо рдХреЗ рдЕрдиреБрд╕рд╛рд░ рдХреМрди рд╕реА рдлрд╕рд▓ рдмреЛрдиреА рдЪрд╛рд╣рд┐рдП рдмрддрд╛рдПрдВред
3. рдпрджрд┐ рдЬрд╝рдореАрди рдпрд╛ рдлрд╕рд▓ рдореЗрдВ рдХреЛрдИ рд╕рдорд╕реНрдпрд╛ рд╣реЛ рддреЛ рд╕реБрдЭрд╛рд╡ рджреЗрдВред
"""
    elif lang == "en":
        return f"""You are a smart multilingual agricultural assistant AI. Based on the farmer's input and weather, reply in clear and simple English.

{input_summary}

ЁЯМжя╕П Current Weather:
- Temperature: {weather['temp']}┬░C
- Condition: {weather['condition']}
- Humidity: {weather['humidity']}%

тЬЕ Please:
1. Respond in English simply.
2. Suggest what crop can be planted now.
3. Give advice if there is any field or crop issue.
"""
    elif lang == "te":
        return f"""р░ор▒Ар░░р▒Б р░др▒Жр░▓р▒Бр░Чр▒Бр░▓р▒Л р░╕р░ор░╛р░зр░╛р░ир░╛р░▓р▒Б р░Зр░Ър▒Нр░Ър▒З р░др▒Жр░▓р░┐р░╡р▒Ир░и р░мр░╣р▒Бр░нр░╛р░╖р░╛ р░╡р▒Нр░пр░╡р░╕р░╛р░п р░╕р░╣р░╛р░пр░Х AI. р░░р▒Ир░др▒Б р░Зр░Ър▒Нр░Ър░┐р░и р░╕р░ор░╛р░Ър░╛р░░р░В р░ор░░р░┐р░пр▒Б р░╡р░╛р░др░╛р░╡р░░р░гр░╛р░ир▒Нр░ир░┐ р░мр░Яр▒Нр░Яр░┐ р░др▒Жр░▓р▒Бр░Чр▒Бр░▓р▒Л р░╕р░▓р░╣р░╛ р░Зр░╡р▒Нр░╡р░Вр░бр░┐.

{input_summary}

ЁЯМжя╕П р░╡р░╛р░др░╛р░╡р░░р░г р░╕р░ор░╛р░Ър░╛р░░р░В:
- р░Йр░╖р▒Нр░гр▒Лр░Чр▒Нр░░р░д: {weather['temp']}┬░C
- р░кр░░р░┐р░╕р▒Нр░ер░┐р░др░┐: {weather['condition']}
- р░Жр░░р▒Нр░жр▒Нр░░р░д: {weather['humidity']}%

тЬЕ р░жр░пр░Ър▒Зр░╕р░┐:
1. р░╕р░░р░│р░ор▒Ир░и р░др▒Жр░▓р▒Бр░Чр▒Бр░▓р▒Л р░╕р░ор░╛р░зр░╛р░ир░В р░Зр░╡р▒Нр░╡р░Вр░бр░┐.
2. р░Зр░кр▒Нр░кр▒Бр░бр▒Б р░П р░кр░Вр░Я р░╡р▒Зр░пр░╛р░▓р▒Л р░╕р▒Вр░Ър░┐р░Вр░Ър░Вр░бр░┐.
3. р░нр▒Вр░ор░┐ р░▓р▒Зр░жр░╛ р░кр░Вр░Я р░╕р░ор░╕р▒Нр░пр░▓р▒Б р░Йр░Вр░Яр▒З р░╕р░▓р░╣р░╛ р░Зр░╡р▒Нр░╡р░Вр░бр░┐.
"""
    elif lang == "ml":
        return f"""р┤ир┤┐р┤Щр╡Нр┤Щр╡╛ р┤ор┤▓р┤пр┤╛р┤│р┤др╡Нр┤др┤┐р╡╜ р┤Йр┤др╡Нр┤др┤░р┤В р┤ир╡╜р┤Хр╡Бр┤ир╡Нр┤и р┤мр┤╣р╡Бр┤нр┤╛р┤╖р┤╛ р┤Хр┤╛р╡╝р┤╖р┤┐р┤Х р┤╕р┤╣р┤╛р┤п AI р┤Жр┤гр╡Б. р┤Хр╡╝р┤╖р┤Хр┤ир╡Нр┤▒р╡Ж р┤╡р┤┐р┤╡р┤░р┤Щр╡Нр┤Щр┤│р╡Бр┤В р┤Хр┤╛р┤▓р┤╛р┤╡р┤╕р╡Нр┤ер┤пр╡Бр┤В р┤Ер┤Яр┤┐р┤╕р╡Нр┤ер┤╛р┤ир┤ор┤╛р┤Хр╡Нр┤Хр┤┐ р┤ор┤▓р┤пр┤╛р┤│р┤др╡Нр┤др┤┐р╡╜ р┤Йр┤кр┤жр╡Зр┤╢р┤В р┤ир╡╜р┤Хр╡Бр┤Х.

{input_summary}

ЁЯМжя╕П р┤Хр┤╛р┤▓р┤╛р┤╡р┤╕р╡Нр┤ер┤╛ р┤╡р┤┐р┤╡р┤░р┤Щр╡Нр┤Щр╡╛:
- р┤др┤╛р┤кр┤ир┤┐р┤▓: {weather['temp']}┬░C
- р┤Ер┤╡р┤╕р╡Нр┤е: {weather['condition']}
- р┤Ир╡╝р┤кр╡Нр┤кр┤В: {weather['humidity']}%

тЬЕ р┤жр┤пр┤╡р┤╛р┤пр┤┐:
1. р┤▓р┤│р┤┐р┤др┤ор┤╛р┤п р┤ор┤▓р┤пр┤╛р┤│р┤др╡Нр┤др┤┐р╡╜ р┤ор┤▒р╡Бр┤кр┤Яр┤┐ р┤ир╡╜р┤Хр╡Бр┤Х.
2. р┤Зр┤кр╡Нр┤кр╡Лр╡╛ р┤Ор┤др╡Н р┤╡р┤┐р┤│р┤В р┤╡р┤│р╡╝р┤др╡Нр┤др┤╛р┤ор╡Жр┤ир╡Нр┤ир╡Б р┤ир┤┐р╡╝р┤жр╡Зр┤╢р┤┐р┤Хр╡Нр┤Хр╡Бр┤Х.
3. р┤ор┤гр╡Нр┤гр╡Л р┤╡р┤┐р┤│р┤пр┤┐р┤▓р╡Л р┤кр╡Нр┤░р┤╢р╡Нр┤ир┤Щр╡Нр┤Щр╡╛ р┤Йр┤гр╡Нр┤Яр╡Жр┤Щр╡Нр┤Хр┤┐р╡╜ р┤Йр┤кр┤жр╡Зр┤╢р┤В р┤ир╡╜р┤Хр╡Бр┤Х.
"""
    else:
        return f"""роирпАроЩрпНроХро│рпН роТро░рпБ роЕро▒ро┐ро╡рпБро│рпНро│ рокройрпНроорпКро┤ро┐ ро╡ро┐ро╡роЪро╛роп роЖро▓рпЛроЪроХро░рпН AI. 
ро╡ро┐ро╡роЪро╛ропро┐ропро┐ройрпН роЙро│рпНро│рпАроЯрпБроХро│рпН рооро▒рпНро▒рпБроорпН ро╡ро╛ройро┐ро▓рпИ роЕроЯро┐рокрпНрокроЯрпИропро┐ро▓рпН родрооро┐ро┤ро┐ро▓рпН роЖро▓рпЛроЪройрпИ ро╡ро┤роЩрпНроХро╡рпБроорпН.

{input_summary}

ЁЯМжя╕П родро▒рпНрокрпЛродрпИроп ро╡ро╛ройро┐ро▓рпИ:
- ро╡рпЖрокрпНрокроиро┐ро▓рпИ: {weather['temp']}┬░C
- роиро┐ро▓рпИ: {weather['condition']}
- роИро░рокрпНрокродроорпН: {weather['humidity']}%

тЬЕ роЙроЩрпНроХро│рпН рокродро┐ро▓ро┐ро▓рпН:
1. родрооро┐ро┤ро┐ро▓рпН роОро│ро┐роорпИропро╛роХ ро╡ро┐ро│роХрпНроХро╡рпБроорпН.
2. родро▒рпНрокрпЛродрпБ роОройрпНрой ро╡ро┐родрпИроХрпНроХро▓ро╛роорпН роОройрпНрокродрпИроЪрпН роЪрпКро▓рпНро▓ро╡рпБроорпН.
3. роиро┐ро▓роорпН роЕро▓рпНро▓родрпБ рокропро┐ро░рпН родрпКроЯро░рпНрокро╛рой роЪро┐роХрпНроХро▓рпНроХро│рпН роЗро░рпБроирпНродро╛ро▓рпН рокро░ро┐роирпНродрпБро░рпИ роЪрпЖропрпНропро╡рпБроорпН.
"""
